-- TABLE COUNTUSERS
DROP TABLE IF EXISTS UsersbyDate;
DELIMITER //
CREATE TABLE UsersbyDate (
    AmountOfUsers INT NOT NULL,
    LoopDateNTime DATETIME NOT NULL
);
//
DELIMITER ;

DROP FUNCTION IF EXISTS COUNT_USERS_DATE;
DELIMITER //
CREATE FUNCTION COUNT_USERS_DATE()
RETURNS INT
READS SQL DATA
DETERMINISTIC
BEGIN
	DECLARE NumberOfUsers INT;
    SELECT COUNT(idUser)
    FROM Users
    WHERE DATE(creationDate) = DATE(SYSDATE())
    INTO NumberOfUsers;
	RETURN NumberOfUsers;
END;
//
DELIMITER ;

DROP PROCEDURE IF EXISTS `KT`.`INSERT_USERSBYDATE`;
DELIMITER //
CREATE PROCEDURE `KT`.`INSERT_USERSBYDATE`(IN p_AmountOfUsers INT, IN p_LoopDateNTime DATETIME)
BEGIN
	INSERT INTO UsersbyDate(AmountOfUsers, LoopDateNTime) VALUES(p_AmountOfUsers, p_LoopDateNTime);
    COMMIT;
END;
//
DELIMITER ;

DROP EVENT IF EXISTS countUsers;
DELIMITER //
CREATE EVENT countUsers
ON SCHEDULE EVERY 1 DAY
STARTS CURRENT_TIMESTAMP
ENDS CURRENT_TIMESTAMP + INTERVAL 1 WEEK
DO
	CALL `KT`.`INSERT_USERSBYDATE`(COUNT_USERS_DATE(), SYSDATE());