 -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTAMENITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTAMENITY` 
BEFORE INSERT
ON Amenity
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;

//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTAMENITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTAMENITYXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTAMENITYXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTAMENITYXROOM` 
BEFORE INSERT
ON AmenityxRoom
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTAMENITYXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTCANTON
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTCANTON`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTCANTON` 
BEFORE INSERT
ON Canton
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTCANTON` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTCOUNTRY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTCOUNTRY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTCOUNTRY` 
BEFORE INSERT
ON Country
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTCOUNTRY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTDISCOUNT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTDISCOUNT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTDISCOUNT` 
BEFORE INSERT
ON Discount
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTDISCOUNT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTDISTRICT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTDISTRICT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTDISTRICT` 
BEFORE INSERT
ON District
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTDISTRICT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTEMAIL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTEMAIL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTEMAIL` 
BEFORE INSERT
ON Email
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTEMAIL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTFAVORITE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTFAVORITE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTFAVORITE` 
BEFORE INSERT
ON Favorite
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTFAVORITE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTFEEDBACK
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTFEEDBACK`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTFEEDBACK` 
BEFORE INSERT
ON Feedback
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTFEEDBACK` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTGENDER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTGENDER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTGENDER` 
BEFORE INSERT
ON Gender
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTGENDER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTHOTEL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTHOTEL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTHOTEL` 
BEFORE INSERT
ON Hotel
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUsers = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUsers = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTHOTEL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTIDTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTIDTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTIDTYPE` 
BEFORE INSERT
ON IdType
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTIDTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTNATIONALITY` 
BEFORE INSERT
ON Nationality
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPARAMETER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPARAMETER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPARAMETER` 
BEFORE INSERT
ON Parameter
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPARAMETER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPAYMENTMETHOD
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPAYMENTMETHOD`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPAYMENTMETHOD` 
BEFORE INSERT
ON PaymentMethod
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPAYMENTMETHOD` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPAYXHOT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPAYXHOT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPAYXHOT` 
BEFORE INSERT
ON PaymentMethodXHotel
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPAYXHOT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPHONENUMBER` 
BEFORE INSERT
ON PhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPHOTO
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPHOTO`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPHOTO` 
BEFORE INSERT
ON Photo
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPHOTO` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTRESERVATION
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTRESERVATION`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTRESERVATION` 
BEFORE INSERT
ON Reservation
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTRESERVATION` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTRESXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTRESXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTRESXROOM` 
BEFORE INSERT
ON ReservationXRoom
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTRESXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTREVIEW
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTREVIEW`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTREVIEW` 
BEFORE INSERT
ON Review
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTREVIEW` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTROOM` 
BEFORE INSERT
ON Room
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTROOMCATEGORY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTROOMCATEGORY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTROOMCATEGORY` 
BEFORE INSERT
ON RoomCategory
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTROOMCATEGORY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTSTATE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTSTATE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTSTATE` 
BEFORE INSERT
ON State
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTSTATE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERS
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERS`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERS` 
BEFORE INSERT
ON Users
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERS` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERTYPE` 
BEFORE INSERT
ON UserType
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERXNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERXNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERXNATIONALITY` 
BEFORE INSERT
ON UserxNationality
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERXNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERXPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERXPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERXPHONENUMBER` 
BEFORE INSERT
ON UserXPhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERXPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEAMENITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEAMENITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEAMENITY` 
BEFORE UPDATE
ON Amenity
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEAMENITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEAMENITYXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEAMENITYXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEAMENITYXROOM` 
BEFORE UPDATE
ON AmenityxRoom
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEAMENITYXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATECANTON
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATECANTON`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATECANTON` 
BEFORE UPDATE
ON Canton
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATECANTON` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATECOUNTRY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATECOUNTRY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATECOUNTRY` 
BEFORE UPDATE
ON Country
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATECOUNTRY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEDISCOUNT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEDISCOUNT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEDISCOUNT` 
BEFORE UPDATE
ON Discount
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEDISCOUNT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEDISTRICT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEDISTRICT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEDISTRICT` 
BEFORE UPDATE
ON District
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEDISTRICT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEEMAIL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEEMAIL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEEMAIL` 
BEFORE UPDATE
ON Email
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEEMAIL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEFAVORITE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEFAVORITE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEFAVORITE` 
BEFORE UPDATE
ON Favorite
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEFAVORITE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEFEEDBACK
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEFEEDBACK`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEFEEDBACK` 
BEFORE UPDATE
ON Feedback
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEFEEDBACK` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEGENDER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEGENDER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEGENDER` 
BEFORE UPDATE
ON Gender
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEGENDER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEHOTEL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEHOTEL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEHOTEL` 
BEFORE UPDATE
ON Hotel
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUsers = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEHOTEL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEIDTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEIDTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEIDTYPE` 
BEFORE UPDATE
ON IdType
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEIDTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATENATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATENATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATENATIONALITY` 
BEFORE UPDATE
ON Nationality
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATENATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPARAMETER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPARAMETER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPARAMETER` 
BEFORE UPDATE
ON Parameter
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPARAMETER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPAYMENTMETHOD
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPAYMENTMETHOD`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPAYMENTMETHOD` 
BEFORE UPDATE
ON PaymentMethod
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPAYMENTMETHOD` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPAYXHOT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPAYXHOT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPAYXHOT` 
BEFORE UPDATE
ON PaymentMethodXHotel
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPAYXHOT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPHONENUMBER` 
BEFORE UPDATE
ON PhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPHOTO
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPHOTO`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPHOTO` 
BEFORE UPDATE
ON Photo
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPHOTO` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATERESERVATION
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATERESERVATION`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATERESERVATION` 
BEFORE UPDATE
ON Reservation
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATERESERVATION` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATERESXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATERESXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATERESXROOM` 
BEFORE UPDATE
ON ReservationXRoom
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATERESXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEREVIEW
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEREVIEW`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEREVIEW` 
BEFORE UPDATE
ON Review
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEREVIEW` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEROOM` 
BEFORE UPDATE
ON Room
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEROOMCATEGORY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEROOMCATEGORY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEROOMCATEGORY` 
BEFORE UPDATE
ON RoomCategory
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEROOMCATEGORY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATESTATE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATESTATE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATESTATE` 
BEFORE UPDATE
ON State
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATESTATE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERS
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERS`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERS` 
BEFORE UPDATE
ON Users
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERS` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERTYPE` 
BEFORE UPDATE
ON UserType
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERXNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERXNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERXNATIONALITY` 
BEFORE UPDATE
ON UserxNationality
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERXNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERXPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERXPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERXPHONENUMBER` 
BEFORE UPDATE
ON UserXPhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERXPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTAMENITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTAMENITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTAMENITY` 
BEFORE INSERT
ON Amenity
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;

//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTAMENITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEAMENITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEAMENITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEAMENITY` 
BEFORE UPDATE
ON Amenity
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEAMENITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTAMENITYXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTAMENITYXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTAMENITYXROOM` 
BEFORE INSERT
ON AmenityxRoom
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTAMENITYXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEAMENITYXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEAMENITYXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEAMENITYXROOM` 
BEFORE UPDATE
ON AmenityxRoom
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEAMENITYXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTCANTON
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTCANTON`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTCANTON` 
BEFORE INSERT
ON Canton
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTCANTON` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATECANTON
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATECANTON`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATECANTON` 
BEFORE UPDATE
ON Canton
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATECANTON` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTCOUNTRY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTCOUNTRY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTCOUNTRY` 
BEFORE INSERT
ON Country
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTCOUNTRY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATECOUNTRY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATECOUNTRY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATECOUNTRY` 
BEFORE UPDATE
ON Country
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATECOUNTRY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTDISCOUNT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTDISCOUNT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTDISCOUNT` 
BEFORE INSERT
ON Discount
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTDISCOUNT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEDISCOUNT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEDISCOUNT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEDISCOUNT` 
BEFORE UPDATE
ON Discount
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEDISCOUNT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTDISTRICT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTDISTRICT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTDISTRICT` 
BEFORE INSERT
ON District
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTDISTRICT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEDISTRICT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEDISTRICT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEDISTRICT` 
BEFORE UPDATE
ON District
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEDISTRICT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTEMAIL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTEMAIL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTEMAIL` 
BEFORE INSERT
ON Email
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTEMAIL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEEMAIL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEEMAIL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEEMAIL` 
BEFORE UPDATE
ON Email
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEEMAIL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTFAVORITE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTFAVORITE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTFAVORITE` 
BEFORE INSERT
ON Favorite
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTFAVORITE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEFAVORITE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEFAVORITE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEFAVORITE` 
BEFORE UPDATE
ON Favorite
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEFAVORITE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTFEEDBACK
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTFEEDBACK`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTFEEDBACK` 
BEFORE INSERT
ON Feedback
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTFEEDBACK` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEFEEDBACK
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEFEEDBACK`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEFEEDBACK` 
BEFORE UPDATE
ON Feedback
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEFEEDBACK` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTGENDER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTGENDER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTGENDER` 
BEFORE INSERT
ON Gender
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTGENDER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEGENDER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEGENDER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEGENDER` 
BEFORE UPDATE
ON Gender
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEGENDER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTHOTEL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTHOTEL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTHOTEL` 
BEFORE INSERT
ON Hotel
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUsers = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUsers = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTHOTEL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEHOTEL
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEHOTEL`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEHOTEL` 
BEFORE UPDATE
ON Hotel
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUsers = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEHOTEL` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTIDTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTIDTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTIDTYPE` 
BEFORE INSERT
ON IdType
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTIDTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEIDTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEIDTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEIDTYPE` 
BEFORE UPDATE
ON IdType
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEIDTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATENATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATENATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATENATIONALITY` 
BEFORE UPDATE
ON Nationality
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATENATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTNATIONALITY` 
BEFORE INSERT
ON Nationality
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPARAMETER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPARAMETER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPARAMETER` 
BEFORE UPDATE
ON Parameter
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPARAMETER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPARAMETER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPARAMETER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPARAMETER` 
BEFORE INSERT
ON Parameter
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPARAMETER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPAYMENTMETHOD
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPAYMENTMETHOD`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPAYMENTMETHOD` 
BEFORE UPDATE
ON PaymentMethod
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPAYMENTMETHOD` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPAYMENTMETHOD
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPAYMENTMETHOD`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPAYMENTMETHOD` 
BEFORE INSERT
ON PaymentMethod
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPAYMENTMETHOD` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPAYXHOT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPAYXHOT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPAYXHOT` 
BEFORE UPDATE
ON PaymentMethodXHotel
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPAYXHOT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPAYXHOT
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPAYXHOT`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPAYXHOT` 
BEFORE INSERT
ON PaymentMethodXHotel
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPAYXHOT` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPHONENUMBER` 
BEFORE UPDATE
ON PhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPHONENUMBER` 
BEFORE INSERT
ON PhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEPHOTO
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEPHOTO`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEPHOTO` 
BEFORE UPDATE
ON Photo
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEPHOTO` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTPHOTO
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTPHOTO`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTPHOTO` 
BEFORE INSERT
ON Photo
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTPHOTO` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATERESERVATION
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATERESERVATION`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATERESERVATION` 
BEFORE UPDATE
ON Reservation
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATERESERVATION` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTRESERVATION
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTRESERVATION`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTRESERVATION` 
BEFORE INSERT
ON Reservation
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTRESERVATION` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATERESXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATERESXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATERESXROOM` 
BEFORE UPDATE
ON ReservationXRoom
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATERESXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTRESXROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTRESXROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTRESXROOM` 
BEFORE INSERT
ON ReservationXRoom
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTRESXROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEREVIEW
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEREVIEW`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEREVIEW` 
BEFORE UPDATE
ON Review
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEREVIEW` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTREVIEW
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTREVIEW`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTREVIEW` 
BEFORE INSERT
ON Review
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTREVIEW` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEROOM` 
BEFORE UPDATE
ON Room
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTROOM
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTROOM`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTROOM` 
BEFORE INSERT
ON Room
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTROOM` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEROOMCATEGORY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEROOMCATEGORY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEROOMCATEGORY` 
BEFORE UPDATE
ON RoomCategory
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEROOMCATEGORY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTROOMCATEGORY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTROOMCATEGORY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTROOMCATEGORY` 
BEFORE INSERT
ON RoomCategory
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTROOMCATEGORY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATESTATE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATESTATE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATESTATE` 
BEFORE UPDATE
ON State
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATESTATE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTSTATE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTSTATE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTSTATE` 
BEFORE INSERT
ON State
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTSTATE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERS
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERS`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERS` 
BEFORE UPDATE
ON Users
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERS` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERS
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERS`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERS` 
BEFORE INSERT
ON Users
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERS` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERTYPE` 
BEFORE UPDATE
ON UserType
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERTYPE
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERTYPE`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERTYPE` 
BEFORE INSERT
ON UserType
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERTYPE` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERXNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERXNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERXNATIONALITY` 
BEFORE UPDATE
ON UserxNationality
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERXNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERXNATIONALITY
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERXNATIONALITY`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERXNATIONALITY` 
BEFORE INSERT
ON UserxNationality
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREINSERTUSERXNATIONALITY` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREUPDATEUSERXPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREUPDATEUSERXPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREUPDATEUSERXPHONENUMBER` 
BEFORE UPDATE
ON UserXPhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;


/* ALTER TRIGGER `KT`.`BEFOREUPDATEUSERXPHONENUMBER` ENABLE; */
--  SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BEFOREINSERTUSERXPHONENUMBER
--  SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  DROP TRIGGER IF EXISTS `KT`.`BEFOREINSERTUSERXPHONENUMBER`;

  DELIMITER //

  CREATE TRIGGER `KT`.`BEFOREINSERTUSERXPHONENUMBER` 
BEFORE INSERT
ON UserXPhoneNumber
FOR EACH ROW
BEGIN
  SET NEW.creationDate = SYSDATE();
  SET NEW.creationUser = USER();
  SET NEW.modDate = SYSDATE();
  SET NEW.modUser = USER();  
END;


//

DELIMITER ;